// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using BlueJay.LDtk;
//
//    var welcome = JsonCoverter.FromJson(jsonString);
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8603

namespace BlueJay.LDtk
{
  using System;
  using System.Collections.Generic;

  using System.Text.Json;
  using System.Text.Json.Serialization;
  using System.Globalization;

  public partial class JsonBase
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("$schema")]
    public Uri Schema { get; set; }

    [JsonPropertyName("$ref")]
    public string Ref { get; set; }

    [JsonPropertyName("version")]
    public string Version { get; set; }

    [JsonPropertyName("LdtkJsonRoot")]
    public LdtkJsonRoot LdtkJsonRoot { get; set; }

    [JsonPropertyName("otherTypes")]
    public OtherTypes OtherTypes { get; set; }
  }

  public partial class LdtkJsonRoot
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] LdtkJsonRootRequired { get; set; }

    [JsonPropertyName("properties")]
    public LdtkJsonRootProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class LdtkJsonRootProperties
  {
    [JsonPropertyName("backupLimit")]
    public AppBuildId BackupLimit { get; set; }

    [JsonPropertyName("defaultEntityWidth")]
    public AppBuildId DefaultEntityWidth { get; set; }

    [JsonPropertyName("backupOnSave")]
    public AppBuildId BackupOnSave { get; set; }

    [JsonPropertyName("worldGridWidth")]
    public AppBuildId WorldGridWidth { get; set; }

    [JsonPropertyName("iid")]
    public AppBuildId Iid { get; set; }

    [JsonPropertyName("defaultLevelBgColor")]
    public AppBuildId DefaultLevelBgColor { get; set; }

    [JsonPropertyName("bgColor")]
    public AppBuildId BgColor { get; set; }

    [JsonPropertyName("worlds")]
    public CustomCommands Worlds { get; set; }

    [JsonPropertyName("toc")]
    public CustomCommands Toc { get; set; }

    [JsonPropertyName("nextUid")]
    public AppBuildId NextUid { get; set; }

    [JsonPropertyName("imageExportMode")]
    public IdentifierStyle ImageExportMode { get; set; }

    [JsonPropertyName("identifierStyle")]
    public IdentifierStyle IdentifierStyle { get; set; }

    [JsonPropertyName("defaultPivotY")]
    public AppBuildId DefaultPivotY { get; set; }

    [JsonPropertyName("dummyWorldIid")]
    public AppBuildId DummyWorldIid { get; set; }

    [JsonPropertyName("customCommands")]
    public CustomCommands CustomCommands { get; set; }

    [JsonPropertyName("worldGridHeight")]
    public AppBuildId WorldGridHeight { get; set; }

    [JsonPropertyName("appBuildId")]
    public AppBuildId AppBuildId { get; set; }

    [JsonPropertyName("defaultGridSize")]
    public AppBuildId DefaultGridSize { get; set; }

    [JsonPropertyName("worldLayout")]
    public WorldLayout WorldLayout { get; set; }

    [JsonPropertyName("flags")]
    public Flags Flags { get; set; }

    [JsonPropertyName("levelNamePattern")]
    public AppBuildId LevelNamePattern { get; set; }

    [JsonPropertyName("exportPng")]
    public AppBuildId ExportPng { get; set; }

    [JsonPropertyName("defaultLevelWidth")]
    public AppBuildId DefaultLevelWidth { get; set; }

    [JsonPropertyName("pngFilePattern")]
    public AppBuildId PngFilePattern { get; set; }

    [JsonPropertyName("__FORCED_REFS")]
    public ForcedRefs ForcedRefs { get; set; }

    [JsonPropertyName("exportTiled")]
    public AppBuildId ExportTiled { get; set; }

    [JsonPropertyName("defs")]
    public Defs Defs { get; set; }

    [JsonPropertyName("levels")]
    public CustomCommands Levels { get; set; }

    [JsonPropertyName("jsonVersion")]
    public AppBuildId JsonVersion { get; set; }

    [JsonPropertyName("defaultEntityHeight")]
    public AppBuildId DefaultEntityHeight { get; set; }

    [JsonPropertyName("defaultPivotX")]
    public AppBuildId DefaultPivotX { get; set; }

    [JsonPropertyName("defaultLevelHeight")]
    public AppBuildId DefaultLevelHeight { get; set; }

    [JsonPropertyName("simplifiedExport")]
    public AppBuildId SimplifiedExport { get; set; }

    [JsonPropertyName("externalLevels")]
    public AppBuildId ExternalLevels { get; set; }

    [JsonPropertyName("tutorialDesc")]
    public AppBuildId TutorialDesc { get; set; }

    [JsonPropertyName("minifyJson")]
    public AppBuildId MinifyJson { get; set; }

    [JsonPropertyName("exportLevelBg")]
    public AppBuildId ExportLevelBg { get; set; }

    [JsonPropertyName("backupRelPath")]
    public AppBuildId BackupRelPath { get; set; }
  }

  public partial class AppBuildId
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class CustomCommands
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("items")]
    public ItemsValue Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class ItemsValue
  {
    [JsonPropertyName("$ref")]
    public string Ref { get; set; }
  }

  public partial class Defs
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("$ref")]
    public string Ref { get; set; }
  }

  public partial class Flags
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("items")]
    public FlagsItems Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class FlagsItems
  {
    [JsonPropertyName("enum")]
    public string[] Enum { get; set; }
  }

  public partial class ForcedRefs
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("properties")]
    public Dictionary<string, ItemsValue> Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class IdentifierStyle
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("enum")]
    public string[] Enum { get; set; }
  }

  public partial class WorldLayout
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("enum")]
    public string[] Enum { get; set; }
  }

  public partial class OtherTypes
  {
    [JsonPropertyName("TilesetRect")]
    public TilesetRect TilesetRect { get; set; }

    [JsonPropertyName("FieldInstance")]
    public FieldInstance FieldInstance { get; set; }

    [JsonPropertyName("EntityInstance")]
    public EntityInstance EntityInstance { get; set; }

    [JsonPropertyName("Definitions")]
    public Definitions Definitions { get; set; }

    [JsonPropertyName("EnumTagValue")]
    public EnumTagValue EnumTagValue { get; set; }

    [JsonPropertyName("AutoRuleDef")]
    public AutoRuleDef AutoRuleDef { get; set; }

    [JsonPropertyName("FieldDef")]
    public FieldDef FieldDef { get; set; }

    [JsonPropertyName("CustomCommand")]
    public CustomCommand CustomCommand { get; set; }

    [JsonPropertyName("EntityDef")]
    public EntityDef EntityDef { get; set; }

    [JsonPropertyName("AutoLayerRuleGroup")]
    public AutoLayerRuleGroup AutoLayerRuleGroup { get; set; }

    [JsonPropertyName("IntGridValueGroupDef")]
    public IntGridValueGroupDef IntGridValueGroupDef { get; set; }

    [JsonPropertyName("IntGridValueInstance")]
    public IntGridValueInstance IntGridValueInstance { get; set; }

    [JsonPropertyName("TocInstanceData")]
    public TocInstanceData TocInstanceData { get; set; }

    [JsonPropertyName("NeighbourLevel")]
    public NeighbourLevel NeighbourLevel { get; set; }

    [JsonPropertyName("LayerInstance")]
    public LayerInstance LayerInstance { get; set; }

    [JsonPropertyName("World")]
    public World World { get; set; }

    [JsonPropertyName("EntityReferenceInfos")]
    public EntityReferenceInfos EntityReferenceInfos { get; set; }

    [JsonPropertyName("TileCustomMetadata")]
    public TileCustomMetadata TileCustomMetadata { get; set; }

    [JsonPropertyName("TilesetDef")]
    public TilesetDef TilesetDef { get; set; }

    [JsonPropertyName("EnumDefValues")]
    public EnumDefValues EnumDefValues { get; set; }

    [JsonPropertyName("Tile")]
    public Tile Tile { get; set; }

    [JsonPropertyName("LayerDef")]
    public LayerDef LayerDef { get; set; }

    [JsonPropertyName("LevelBgPosInfos")]
    public LevelBgPosInfos LevelBgPosInfos { get; set; }

    [JsonPropertyName("Level")]
    public Level Level { get; set; }

    [JsonPropertyName("TableOfContentEntry")]
    public TableOfContentEntry TableOfContentEntry { get; set; }

    [JsonPropertyName("EnumDef")]
    public EnumDef EnumDef { get; set; }

    [JsonPropertyName("GridPoint")]
    public GridPoint GridPoint { get; set; }

    [JsonPropertyName("IntGridValueDef")]
    public IntGridValueDef IntGridValueDef { get; set; }
  }

  public partial class AutoLayerRuleGroup
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] AutoLayerRuleGroupRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public AutoLayerRuleGroupProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class AutoLayerRuleGroupProperties
  {
    [JsonPropertyName("name")]
    public AppBuildId Name { get; set; }

    [JsonPropertyName("collapsed")]
    public AppBuildId Collapsed { get; set; }

    [JsonPropertyName("biomeRequirementMode")]
    public AppBuildId BiomeRequirementMode { get; set; }

    [JsonPropertyName("color")]
    public AppBuildId Color { get; set; }

    [JsonPropertyName("isOptional")]
    public AppBuildId IsOptional { get; set; }

    [JsonPropertyName("icon")]
    public Icon Icon { get; set; }

    [JsonPropertyName("usesWizard")]
    public AppBuildId UsesWizard { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("requiredBiomeValues")]
    public RequiredBiomeValues RequiredBiomeValues { get; set; }

    [JsonPropertyName("active")]
    public AppBuildId Active { get; set; }

    [JsonPropertyName("rules")]
    public CustomCommands Rules { get; set; }
  }

  public partial class Icon
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("oneOf")]
    public OneOf[] OneOf { get; set; }
  }

  public partial class OneOf
  {
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("$ref")]
    public string Ref { get; set; }
  }

  public partial class RequiredBiomeValues
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("items")]
    public RequiredBiomeValuesItems Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class RequiredBiomeValuesItems
  {
    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class AutoRuleDef
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] AutoRuleDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public AutoRuleDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class AutoRuleDefProperties
  {
    [JsonPropertyName("flipX")]
    public AppBuildId FlipX { get; set; }

    [JsonPropertyName("pivotX")]
    public AppBuildId PivotX { get; set; }

    [JsonPropertyName("perlinActive")]
    public AppBuildId PerlinActive { get; set; }

    [JsonPropertyName("tileRectsIds")]
    public TileRectsIds TileRectsIds { get; set; }

    [JsonPropertyName("perlinScale")]
    public AppBuildId PerlinScale { get; set; }

    [JsonPropertyName("outOfBoundsValue")]
    public AppBuildId OutOfBoundsValue { get; set; }

    [JsonPropertyName("pattern")]
    public RequiredBiomeValues Pattern { get; set; }

    [JsonPropertyName("tileRandomXMin")]
    public AppBuildId TileRandomXMin { get; set; }

    [JsonPropertyName("checker")]
    public IdentifierStyle Checker { get; set; }

    [JsonPropertyName("perlinOctaves")]
    public AppBuildId PerlinOctaves { get; set; }

    [JsonPropertyName("tileIds")]
    public RequiredBiomeValues TileIds { get; set; }

    [JsonPropertyName("alpha")]
    public AppBuildId Alpha { get; set; }

    [JsonPropertyName("tileXOffset")]
    public AppBuildId TileXOffset { get; set; }

    [JsonPropertyName("invalidated")]
    public AppBuildId Invalidated { get; set; }

    [JsonPropertyName("xModulo")]
    public AppBuildId XModulo { get; set; }

    [JsonPropertyName("size")]
    public AppBuildId Size { get; set; }

    [JsonPropertyName("chance")]
    public AppBuildId Chance { get; set; }

    [JsonPropertyName("breakOnMatch")]
    public AppBuildId BreakOnMatch { get; set; }

    [JsonPropertyName("tileYOffset")]
    public AppBuildId TileYOffset { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("perlinSeed")]
    public AppBuildId PerlinSeed { get; set; }

    [JsonPropertyName("yOffset")]
    public AppBuildId YOffset { get; set; }

    [JsonPropertyName("tileRandomYMax")]
    public AppBuildId TileRandomYMax { get; set; }

    [JsonPropertyName("tileRandomYMin")]
    public AppBuildId TileRandomYMin { get; set; }

    [JsonPropertyName("tileMode")]
    public IdentifierStyle TileMode { get; set; }

    [JsonPropertyName("flipY")]
    public AppBuildId FlipY { get; set; }

    [JsonPropertyName("tileRandomXMax")]
    public AppBuildId TileRandomXMax { get; set; }

    [JsonPropertyName("pivotY")]
    public AppBuildId PivotY { get; set; }

    [JsonPropertyName("yModulo")]
    public AppBuildId YModulo { get; set; }

    [JsonPropertyName("active")]
    public AppBuildId Active { get; set; }

    [JsonPropertyName("xOffset")]
    public AppBuildId XOffset { get; set; }
  }

  public partial class TileRectsIds
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("items")]
    public TileRectsIdsItems Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class TileRectsIdsItems
  {
    [JsonPropertyName("items")]
    public RequiredBiomeValuesItems Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class CustomCommand
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] CustomCommandRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public CustomCommandProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class CustomCommandProperties
  {
    [JsonPropertyName("when")]
    public IdentifierStyle When { get; set; }

    [JsonPropertyName("command")]
    public AppBuildId Command { get; set; }
  }

  public partial class Definitions
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] DefinitionsRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public DefinitionsProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class DefinitionsProperties
  {
    [JsonPropertyName("tilesets")]
    public CustomCommands Tilesets { get; set; }

    [JsonPropertyName("layers")]
    public CustomCommands Layers { get; set; }

    [JsonPropertyName("levelFields")]
    public CustomCommands LevelFields { get; set; }

    [JsonPropertyName("enums")]
    public CustomCommands Enums { get; set; }

    [JsonPropertyName("entities")]
    public CustomCommands Entities { get; set; }

    [JsonPropertyName("externalEnums")]
    public CustomCommands ExternalEnums { get; set; }
  }

  public partial class EntityDef
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EntityDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EntityDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EntityDefProperties
  {
    [JsonPropertyName("tileId")]
    public AppBuildId TileId { get; set; }

    [JsonPropertyName("showName")]
    public AppBuildId ShowName { get; set; }

    [JsonPropertyName("tilesetId")]
    public AppBuildId TilesetId { get; set; }

    [JsonPropertyName("maxHeight")]
    public AppBuildId MaxHeight { get; set; }

    [JsonPropertyName("limitScope")]
    public IdentifierStyle LimitScope { get; set; }

    [JsonPropertyName("pivotX")]
    public AppBuildId PivotX { get; set; }

    [JsonPropertyName("maxCount")]
    public AppBuildId MaxCount { get; set; }

    [JsonPropertyName("allowOutOfBounds")]
    public AppBuildId AllowOutOfBounds { get; set; }

    [JsonPropertyName("hollow")]
    public AppBuildId Hollow { get; set; }

    [JsonPropertyName("minHeight")]
    public AppBuildId MinHeight { get; set; }

    [JsonPropertyName("keepAspectRatio")]
    public AppBuildId KeepAspectRatio { get; set; }

    [JsonPropertyName("color")]
    public AppBuildId Color { get; set; }

    [JsonPropertyName("minWidth")]
    public AppBuildId MinWidth { get; set; }

    [JsonPropertyName("tileRect")]
    public Icon TileRect { get; set; }

    [JsonPropertyName("doc")]
    public AppBuildId Doc { get; set; }

    [JsonPropertyName("fieldDefs")]
    public CustomCommands FieldDefs { get; set; }

    [JsonPropertyName("tileRenderMode")]
    public IdentifierStyle TileRenderMode { get; set; }

    [JsonPropertyName("limitBehavior")]
    public IdentifierStyle LimitBehavior { get; set; }

    [JsonPropertyName("tileOpacity")]
    public AppBuildId TileOpacity { get; set; }

    [JsonPropertyName("nineSliceBorders")]
    public RequiredBiomeValues NineSliceBorders { get; set; }

    [JsonPropertyName("resizableX")]
    public AppBuildId ResizableX { get; set; }

    [JsonPropertyName("uiTileRect")]
    public Icon UiTileRect { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("lineOpacity")]
    public AppBuildId LineOpacity { get; set; }

    [JsonPropertyName("maxWidth")]
    public AppBuildId MaxWidth { get; set; }

    [JsonPropertyName("resizableY")]
    public AppBuildId ResizableY { get; set; }

    [JsonPropertyName("exportToToc")]
    public AppBuildId ExportToToc { get; set; }

    [JsonPropertyName("fillOpacity")]
    public AppBuildId FillOpacity { get; set; }

    [JsonPropertyName("height")]
    public AppBuildId Height { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("pivotY")]
    public AppBuildId PivotY { get; set; }

    [JsonPropertyName("renderMode")]
    public IdentifierStyle RenderMode { get; set; }

    [JsonPropertyName("tags")]
    public RequiredBiomeValues Tags { get; set; }

    [JsonPropertyName("width")]
    public AppBuildId Width { get; set; }
  }

  public partial class EntityInstance
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EntityInstanceRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EntityInstanceProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EntityInstanceProperties
  {
    [JsonPropertyName("iid")]
    public AppBuildId Iid { get; set; }

    [JsonPropertyName("defUid")]
    public AppBuildId DefUid { get; set; }

    [JsonPropertyName("__identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("__tile")]
    public Icon Tile { get; set; }

    [JsonPropertyName("px")]
    public RequiredBiomeValues Px { get; set; }

    [JsonPropertyName("__worldX")]
    public AppBuildId WorldX { get; set; }

    [JsonPropertyName("__worldY")]
    public AppBuildId WorldY { get; set; }

    [JsonPropertyName("__smartColor")]
    public AppBuildId SmartColor { get; set; }

    [JsonPropertyName("__grid")]
    public RequiredBiomeValues Grid { get; set; }

    [JsonPropertyName("__pivot")]
    public RequiredBiomeValues Pivot { get; set; }

    [JsonPropertyName("fieldInstances")]
    public CustomCommands FieldInstances { get; set; }

    [JsonPropertyName("height")]
    public AppBuildId Height { get; set; }

    [JsonPropertyName("__tags")]
    public RequiredBiomeValues Tags { get; set; }

    [JsonPropertyName("width")]
    public AppBuildId Width { get; set; }
  }

  public partial class EntityReferenceInfos
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EntityReferenceInfosRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EntityReferenceInfosProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EntityReferenceInfosProperties
  {
    [JsonPropertyName("worldIid")]
    public AppBuildId WorldIid { get; set; }

    [JsonPropertyName("entityIid")]
    public AppBuildId EntityIid { get; set; }

    [JsonPropertyName("layerIid")]
    public AppBuildId LayerIid { get; set; }

    [JsonPropertyName("levelIid")]
    public AppBuildId LevelIid { get; set; }
  }

  public partial class EnumDef
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EnumDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EnumDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EnumDefProperties
  {
    [JsonPropertyName("externalFileChecksum")]
    public AppBuildId ExternalFileChecksum { get; set; }

    [JsonPropertyName("externalRelPath")]
    public AppBuildId ExternalRelPath { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("values")]
    public CustomCommands Values { get; set; }

    [JsonPropertyName("iconTilesetUid")]
    public AppBuildId IconTilesetUid { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("tags")]
    public RequiredBiomeValues Tags { get; set; }
  }

  public partial class EnumDefValues
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EnumDefValuesRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EnumDefValuesProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EnumDefValuesProperties
  {
    [JsonPropertyName("tileId")]
    public AppBuildId TileId { get; set; }

    [JsonPropertyName("color")]
    public AppBuildId Color { get; set; }

    [JsonPropertyName("tileRect")]
    public Icon TileRect { get; set; }

    [JsonPropertyName("id")]
    public AppBuildId Id { get; set; }

    [JsonPropertyName("__tileSrcRect")]
    public RequiredBiomeValues TileSrcRect { get; set; }
  }

  public partial class EnumTagValue
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] EnumTagValueRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public EnumTagValueProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class EnumTagValueProperties
  {
    [JsonPropertyName("tileIds")]
    public RequiredBiomeValues TileIds { get; set; }

    [JsonPropertyName("enumValueId")]
    public AppBuildId EnumValueId { get; set; }
  }

  public partial class FieldDef
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] FieldDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public FieldDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class FieldDefProperties
  {
    [JsonPropertyName("acceptFileTypes")]
    public RequiredBiomeValues AcceptFileTypes { get; set; }

    [JsonPropertyName("editorDisplayScale")]
    public AppBuildId EditorDisplayScale { get; set; }

    [JsonPropertyName("searchable")]
    public AppBuildId Searchable { get; set; }

    [JsonPropertyName("useForSmartColor")]
    public AppBuildId UseForSmartColor { get; set; }

    [JsonPropertyName("editorShowInWorld")]
    public AppBuildId EditorShowInWorld { get; set; }

    [JsonPropertyName("allowedRefs")]
    public IdentifierStyle AllowedRefs { get; set; }

    [JsonPropertyName("editorAlwaysShow")]
    public AppBuildId EditorAlwaysShow { get; set; }

    [JsonPropertyName("arrayMinLength")]
    public AppBuildId ArrayMinLength { get; set; }

    [JsonPropertyName("editorTextSuffix")]
    public AppBuildId EditorTextSuffix { get; set; }

    [JsonPropertyName("min")]
    public AppBuildId Min { get; set; }

    [JsonPropertyName("__type")]
    public AppBuildId Type { get; set; }

    [JsonPropertyName("editorDisplayMode")]
    public IdentifierStyle EditorDisplayMode { get; set; }

    [JsonPropertyName("editorDisplayColor")]
    public AppBuildId EditorDisplayColor { get; set; }

    [JsonPropertyName("canBeNull")]
    public AppBuildId CanBeNull { get; set; }

    [JsonPropertyName("autoChainRef")]
    public AppBuildId AutoChainRef { get; set; }

    [JsonPropertyName("doc")]
    public AppBuildId Doc { get; set; }

    [JsonPropertyName("allowedRefsEntityUid")]
    public AppBuildId AllowedRefsEntityUid { get; set; }

    [JsonPropertyName("tilesetUid")]
    public AppBuildId TilesetUid { get; set; }

    [JsonPropertyName("allowedRefTags")]
    public RequiredBiomeValues AllowedRefTags { get; set; }

    [JsonPropertyName("symmetricalRef")]
    public AppBuildId SymmetricalRef { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("editorTextPrefix")]
    public AppBuildId EditorTextPrefix { get; set; }

    [JsonPropertyName("isArray")]
    public AppBuildId IsArray { get; set; }

    [JsonPropertyName("exportToToc")]
    public AppBuildId ExportToToc { get; set; }

    [JsonPropertyName("editorDisplayPos")]
    public IdentifierStyle EditorDisplayPos { get; set; }

    [JsonPropertyName("textLanguageMode")]
    public WorldLayout TextLanguageMode { get; set; }

    [JsonPropertyName("max")]
    public AppBuildId Max { get; set; }

    [JsonPropertyName("allowOutOfLevelRef")]
    public AppBuildId AllowOutOfLevelRef { get; set; }

    [JsonPropertyName("editorCutLongValues")]
    public AppBuildId EditorCutLongValues { get; set; }

    [JsonPropertyName("defaultOverride")]
    public DefaultOverride DefaultOverride { get; set; }

    [JsonPropertyName("editorLinkStyle")]
    public IdentifierStyle EditorLinkStyle { get; set; }

    [JsonPropertyName("regex")]
    public AppBuildId Regex { get; set; }

    [JsonPropertyName("type")]
    public AppBuildId PropertiesType { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("arrayMaxLength")]
    public AppBuildId ArrayMaxLength { get; set; }
  }

  public partial class DefaultOverride
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }
  }

  public partial class FieldInstance
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] FieldInstanceRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public FieldInstanceProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class FieldInstanceProperties
  {
    [JsonPropertyName("__type")]
    public AppBuildId Type { get; set; }

    [JsonPropertyName("defUid")]
    public AppBuildId DefUid { get; set; }

    [JsonPropertyName("__identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("__tile")]
    public Icon Tile { get; set; }

    [JsonPropertyName("realEditorValues")]
    public RealEditorValues RealEditorValues { get; set; }

    [JsonPropertyName("__value")]
    public DefaultOverride Value { get; set; }
  }

  public partial class RealEditorValues
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("items")]
    public RealEditorValuesItems Items { get; set; }

    [JsonPropertyName("type")]
    public CustomCommandsType[] Type { get; set; }
  }

  public partial class RealEditorValuesItems
  {
  }

  public partial class GridPoint
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] GridPointRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public GridPointProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class GridPointProperties
  {
    [JsonPropertyName("cy")]
    public AppBuildId Cy { get; set; }

    [JsonPropertyName("cx")]
    public AppBuildId Cx { get; set; }
  }

  public partial class IntGridValueDef
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] IntGridValueDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public IntGridValueDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class IntGridValueDefProperties
  {
    [JsonPropertyName("tile")]
    public Icon Tile { get; set; }

    [JsonPropertyName("color")]
    public AppBuildId Color { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("value")]
    public AppBuildId Value { get; set; }

    [JsonPropertyName("groupUid")]
    public AppBuildId GroupUid { get; set; }
  }

  public partial class IntGridValueGroupDef
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] IntGridValueGroupDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public IntGridValueGroupDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class IntGridValueGroupDefProperties
  {
    [JsonPropertyName("color")]
    public AppBuildId Color { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }
  }

  public partial class IntGridValueInstance
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] IntGridValueInstanceRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public IntGridValueInstanceProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class IntGridValueInstanceProperties
  {
    [JsonPropertyName("v")]
    public AppBuildId V { get; set; }

    [JsonPropertyName("coordId")]
    public AppBuildId CoordId { get; set; }
  }

  public partial class LayerDef
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] LayerDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public LayerDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class LayerDefProperties
  {
    [JsonPropertyName("pxOffsetX")]
    public AppBuildId PxOffsetX { get; set; }

    [JsonPropertyName("tilePivotX")]
    public AppBuildId TilePivotX { get; set; }

    [JsonPropertyName("uiFilterTags")]
    public RequiredBiomeValues UiFilterTags { get; set; }

    [JsonPropertyName("displayOpacity")]
    public AppBuildId DisplayOpacity { get; set; }

    [JsonPropertyName("parallaxFactorY")]
    public AppBuildId ParallaxFactorY { get; set; }

    [JsonPropertyName("hideInList")]
    public AppBuildId HideInList { get; set; }

    [JsonPropertyName("__type")]
    public AppBuildId Type { get; set; }

    [JsonPropertyName("guideGridHei")]
    public AppBuildId GuideGridHei { get; set; }

    [JsonPropertyName("uiColor")]
    public AppBuildId UiColor { get; set; }

    [JsonPropertyName("doc")]
    public AppBuildId Doc { get; set; }

    [JsonPropertyName("tilesetDefUid")]
    public AppBuildId TilesetDefUid { get; set; }

    [JsonPropertyName("canSelectWhenInactive")]
    public AppBuildId CanSelectWhenInactive { get; set; }

    [JsonPropertyName("useAsyncRender")]
    public AppBuildId UseAsyncRender { get; set; }

    [JsonPropertyName("autoSourceLayerDefUid")]
    public AppBuildId AutoSourceLayerDefUid { get; set; }

    [JsonPropertyName("autoTilesetDefUid")]
    public AppBuildId AutoTilesetDefUid { get; set; }

    [JsonPropertyName("parallaxScaling")]
    public AppBuildId ParallaxScaling { get; set; }

    [JsonPropertyName("renderInWorldView")]
    public AppBuildId RenderInWorldView { get; set; }

    [JsonPropertyName("intGridValuesGroups")]
    public CustomCommands IntGridValuesGroups { get; set; }

    [JsonPropertyName("inactiveOpacity")]
    public AppBuildId InactiveOpacity { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("excludedTags")]
    public RequiredBiomeValues ExcludedTags { get; set; }

    [JsonPropertyName("hideFieldsWhenInactive")]
    public AppBuildId HideFieldsWhenInactive { get; set; }

    [JsonPropertyName("intGridValues")]
    public CustomCommands IntGridValues { get; set; }

    [JsonPropertyName("autoRuleGroups")]
    public CustomCommands AutoRuleGroups { get; set; }

    [JsonPropertyName("type")]
    public IdentifierStyle PropertiesType { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("guideGridWid")]
    public AppBuildId GuideGridWid { get; set; }

    [JsonPropertyName("requiredTags")]
    public RequiredBiomeValues RequiredTags { get; set; }

    [JsonPropertyName("pxOffsetY")]
    public AppBuildId PxOffsetY { get; set; }

    [JsonPropertyName("tilePivotY")]
    public AppBuildId TilePivotY { get; set; }

    [JsonPropertyName("biomeFieldUid")]
    public AppBuildId BiomeFieldUid { get; set; }

    [JsonPropertyName("gridSize")]
    public AppBuildId GridSize { get; set; }

    [JsonPropertyName("parallaxFactorX")]
    public AppBuildId ParallaxFactorX { get; set; }

    [JsonPropertyName("autoTilesKilledByOtherLayerUid")]
    public AppBuildId AutoTilesKilledByOtherLayerUid { get; set; }
  }

  public partial class LayerInstance
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] LayerInstanceRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public LayerInstanceProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class LayerInstanceProperties
  {
    [JsonPropertyName("__cHei")]
    public AppBuildId CHei { get; set; }

    [JsonPropertyName("pxOffsetX")]
    public AppBuildId PxOffsetX { get; set; }

    [JsonPropertyName("__tilesetRelPath")]
    public AppBuildId TilesetRelPath { get; set; }

    [JsonPropertyName("iid")]
    public AppBuildId Iid { get; set; }

    [JsonPropertyName("levelId")]
    public AppBuildId LevelId { get; set; }

    [JsonPropertyName("__type")]
    public AppBuildId Type { get; set; }

    [JsonPropertyName("autoLayerTiles")]
    public CustomCommands AutoLayerTiles { get; set; }

    [JsonPropertyName("optionalRules")]
    public RequiredBiomeValues OptionalRules { get; set; }

    [JsonPropertyName("__identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("__gridSize")]
    public AppBuildId GridSize { get; set; }

    [JsonPropertyName("__pxTotalOffsetY")]
    public AppBuildId PxTotalOffsetY { get; set; }

    [JsonPropertyName("intGridCsv")]
    public RequiredBiomeValues IntGridCsv { get; set; }

    [JsonPropertyName("overrideTilesetUid")]
    public AppBuildId OverrideTilesetUid { get; set; }

    [JsonPropertyName("visible")]
    public AppBuildId Visible { get; set; }

    [JsonPropertyName("entityInstances")]
    public CustomCommands EntityInstances { get; set; }

    [JsonPropertyName("__opacity")]
    public AppBuildId Opacity { get; set; }

    [JsonPropertyName("seed")]
    public AppBuildId Seed { get; set; }

    [JsonPropertyName("layerDefUid")]
    public AppBuildId LayerDefUid { get; set; }

    [JsonPropertyName("__pxTotalOffsetX")]
    public AppBuildId PxTotalOffsetX { get; set; }

    [JsonPropertyName("__cWid")]
    public AppBuildId CWid { get; set; }

    [JsonPropertyName("pxOffsetY")]
    public AppBuildId PxOffsetY { get; set; }

    [JsonPropertyName("__tilesetDefUid")]
    public AppBuildId TilesetDefUid { get; set; }

    [JsonPropertyName("gridTiles")]
    public CustomCommands GridTiles { get; set; }

    [JsonPropertyName("intGrid")]
    public CustomCommands IntGrid { get; set; }
  }

  public partial class Level
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] LevelRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public LevelProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class LevelProperties
  {
    [JsonPropertyName("__neighbours")]
    public CustomCommands Neighbours { get; set; }

    [JsonPropertyName("__bgColor")]
    public AppBuildId BgColor { get; set; }

    [JsonPropertyName("worldX")]
    public AppBuildId WorldX { get; set; }

    [JsonPropertyName("externalRelPath")]
    public AppBuildId ExternalRelPath { get; set; }

    [JsonPropertyName("useAutoIdentifier")]
    public AppBuildId UseAutoIdentifier { get; set; }

    [JsonPropertyName("iid")]
    public AppBuildId Iid { get; set; }

    [JsonPropertyName("bgColor")]
    public AppBuildId PropertiesBgColor { get; set; }

    [JsonPropertyName("bgPos")]
    public WorldLayout PropertiesBgPos { get; set; }

    [JsonPropertyName("pxHei")]
    public AppBuildId PxHei { get; set; }

    [JsonPropertyName("worldY")]
    public AppBuildId WorldY { get; set; }

    [JsonPropertyName("__bgPos")]
    public Icon BgPos { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("__smartColor")]
    public AppBuildId SmartColor { get; set; }

    [JsonPropertyName("fieldInstances")]
    public CustomCommands FieldInstances { get; set; }

    [JsonPropertyName("pxWid")]
    public AppBuildId PxWid { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("bgPivotY")]
    public AppBuildId BgPivotY { get; set; }

    [JsonPropertyName("bgPivotX")]
    public AppBuildId BgPivotX { get; set; }

    [JsonPropertyName("layerInstances")]
    public CustomCommands LayerInstances { get; set; }

    [JsonPropertyName("bgRelPath")]
    public AppBuildId BgRelPath { get; set; }

    [JsonPropertyName("worldDepth")]
    public AppBuildId WorldDepth { get; set; }
  }

  public partial class LevelBgPosInfos
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] LevelBgPosInfosRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public LevelBgPosInfosProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class LevelBgPosInfosProperties
  {
    [JsonPropertyName("cropRect")]
    public RequiredBiomeValues CropRect { get; set; }

    [JsonPropertyName("scale")]
    public RequiredBiomeValues Scale { get; set; }

    [JsonPropertyName("topLeftPx")]
    public RequiredBiomeValues TopLeftPx { get; set; }
  }

  public partial class NeighbourLevel
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] NeighbourLevelRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public NeighbourLevelProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class NeighbourLevelProperties
  {
    [JsonPropertyName("levelIid")]
    public AppBuildId LevelIid { get; set; }

    [JsonPropertyName("levelUid")]
    public AppBuildId LevelUid { get; set; }

    [JsonPropertyName("dir")]
    public AppBuildId Dir { get; set; }
  }

  public partial class TableOfContentEntry
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TableOfContentEntryRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TableOfContentEntryProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TableOfContentEntryProperties
  {
    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("instancesData")]
    public CustomCommands InstancesData { get; set; }

    [JsonPropertyName("instances")]
    public CustomCommands Instances { get; set; }
  }

  public partial class Tile
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TileRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TileProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TileProperties
  {
    [JsonPropertyName("t")]
    public AppBuildId T { get; set; }

    [JsonPropertyName("d")]
    public RequiredBiomeValues D { get; set; }

    [JsonPropertyName("px")]
    public RequiredBiomeValues Px { get; set; }

    [JsonPropertyName("a")]
    public AppBuildId A { get; set; }

    [JsonPropertyName("f")]
    public AppBuildId F { get; set; }

    [JsonPropertyName("src")]
    public RequiredBiomeValues Src { get; set; }
  }

  public partial class TileCustomMetadata
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TileCustomMetadataRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TileCustomMetadataProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TileCustomMetadataProperties
  {
    [JsonPropertyName("tileId")]
    public AppBuildId TileId { get; set; }

    [JsonPropertyName("data")]
    public AppBuildId Data { get; set; }
  }

  public partial class TilesetDef
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TilesetDefRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TilesetDefProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TilesetDefProperties
  {
    [JsonPropertyName("cachedPixelData")]
    public AppBuildId CachedPixelData { get; set; }

    [JsonPropertyName("__cHei")]
    public AppBuildId CHei { get; set; }

    [JsonPropertyName("pxHei")]
    public AppBuildId PxHei { get; set; }

    [JsonPropertyName("customData")]
    public CustomCommands CustomData { get; set; }

    [JsonPropertyName("tagsSourceEnumUid")]
    public AppBuildId TagsSourceEnumUid { get; set; }

    [JsonPropertyName("uid")]
    public AppBuildId Uid { get; set; }

    [JsonPropertyName("padding")]
    public AppBuildId Padding { get; set; }

    [JsonPropertyName("enumTags")]
    public CustomCommands EnumTags { get; set; }

    [JsonPropertyName("pxWid")]
    public AppBuildId PxWid { get; set; }

    [JsonPropertyName("__cWid")]
    public AppBuildId CWid { get; set; }

    [JsonPropertyName("spacing")]
    public AppBuildId Spacing { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }

    [JsonPropertyName("savedSelections")]
    public RequiredBiomeValues SavedSelections { get; set; }

    [JsonPropertyName("tags")]
    public RequiredBiomeValues Tags { get; set; }

    [JsonPropertyName("embedAtlas")]
    public WorldLayout EmbedAtlas { get; set; }

    [JsonPropertyName("relPath")]
    public AppBuildId RelPath { get; set; }

    [JsonPropertyName("tileGridSize")]
    public AppBuildId TileGridSize { get; set; }
  }

  public partial class TilesetRect
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TilesetRectRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TilesetRectProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TilesetRectProperties
  {
    [JsonPropertyName("tilesetUid")]
    public AppBuildId TilesetUid { get; set; }

    [JsonPropertyName("h")]
    public AppBuildId H { get; set; }

    [JsonPropertyName("x")]
    public AppBuildId X { get; set; }

    [JsonPropertyName("y")]
    public AppBuildId Y { get; set; }

    [JsonPropertyName("w")]
    public AppBuildId W { get; set; }
  }

  public partial class TocInstanceData
  {
    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] TocInstanceDataRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public TocInstanceDataProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class TocInstanceDataProperties
  {
    [JsonPropertyName("worldX")]
    public AppBuildId WorldX { get; set; }

    [JsonPropertyName("widPx")]
    public AppBuildId WidPx { get; set; }

    [JsonPropertyName("worldY")]
    public AppBuildId WorldY { get; set; }

    [JsonPropertyName("heiPx")]
    public AppBuildId HeiPx { get; set; }

    [JsonPropertyName("fields")]
    public DefaultOverride Fields { get; set; }

    [JsonPropertyName("iids")]
    public Defs Iids { get; set; }
  }

  public partial class World
  {
    [JsonPropertyName("description")]
    public string Description { get; set; }

    [JsonPropertyName("title")]
    public string Title { get; set; }

    [JsonPropertyName("required")]
    public string[] WorldRequired { get; set; }

    [JsonPropertyName("additionalProperties")]
    public bool AdditionalProperties { get; set; }

    [JsonPropertyName("properties")]
    public WorldProperties Properties { get; set; }

    [JsonPropertyName("type")]
    public ForcedRefsType[] Type { get; set; }
  }

  public partial class WorldProperties
  {
    [JsonPropertyName("worldGridWidth")]
    public AppBuildId WorldGridWidth { get; set; }

    [JsonPropertyName("iid")]
    public AppBuildId Iid { get; set; }

    [JsonPropertyName("worldGridHeight")]
    public AppBuildId WorldGridHeight { get; set; }

    [JsonPropertyName("worldLayout")]
    public WorldLayout WorldLayout { get; set; }

    [JsonPropertyName("defaultLevelWidth")]
    public AppBuildId DefaultLevelWidth { get; set; }

    [JsonPropertyName("levels")]
    public CustomCommands Levels { get; set; }

    [JsonPropertyName("defaultLevelHeight")]
    public AppBuildId DefaultLevelHeight { get; set; }

    [JsonPropertyName("identifier")]
    public AppBuildId Identifier { get; set; }
  }

  public enum ForcedRefsType { Boolean, Integer, Null, Number, Object, String };

  public enum CustomCommandsType { Array, Null };

  public partial class JsonBase
  {
    public static JsonBase FromJson(string json) => JsonSerializer.Deserialize<JsonBase>(json, BlueJay.LDtk.Converter.Settings);
  }

  public static class Serialize
  {
    public static string ToJson(this JsonBase self) => JsonSerializer.Serialize(self, BlueJay.LDtk.Converter.Settings);
  }

  internal static class Converter
  {
    public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
    {
      Converters =
            {
                ForcedRefsTypeConverter.Singleton,
                CustomCommandsTypeConverter.Singleton,
                new DateOnlyConverter(),
                new TimeOnlyConverter(),
                IsoDateTimeOffsetConverter.Singleton
            },
    };
  }

  internal class ForcedRefsTypeConverter : JsonConverter<ForcedRefsType>
  {
    public override bool CanConvert(Type t) => t == typeof(ForcedRefsType);

    public override ForcedRefsType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
      var value = reader.GetString();
      switch (value)
      {
        case "boolean":
          return ForcedRefsType.Boolean;
        case "integer":
          return ForcedRefsType.Integer;
        case "null":
          return ForcedRefsType.Null;
        case "number":
          return ForcedRefsType.Number;
        case "object":
          return ForcedRefsType.Object;
        case "string":
          return ForcedRefsType.String;
      }
      throw new Exception("Cannot unmarshal type ForcedRefsType");
    }

    public override void Write(Utf8JsonWriter writer, ForcedRefsType value, JsonSerializerOptions options)
    {
      switch (value)
      {
        case ForcedRefsType.Boolean:
          JsonSerializer.Serialize(writer, "boolean", options);
          return;
        case ForcedRefsType.Integer:
          JsonSerializer.Serialize(writer, "integer", options);
          return;
        case ForcedRefsType.Null:
          JsonSerializer.Serialize(writer, "null", options);
          return;
        case ForcedRefsType.Number:
          JsonSerializer.Serialize(writer, "number", options);
          return;
        case ForcedRefsType.Object:
          JsonSerializer.Serialize(writer, "object", options);
          return;
        case ForcedRefsType.String:
          JsonSerializer.Serialize(writer, "string", options);
          return;
      }
      throw new Exception("Cannot marshal type ForcedRefsType");
    }

    public static readonly ForcedRefsTypeConverter Singleton = new ForcedRefsTypeConverter();
  }

  internal class CustomCommandsTypeConverter : JsonConverter<CustomCommandsType>
  {
    public override bool CanConvert(Type t) => t == typeof(CustomCommandsType);

    public override CustomCommandsType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
      var value = reader.GetString();
      switch (value)
      {
        case "array":
          return CustomCommandsType.Array;
        case "null":
          return CustomCommandsType.Null;
      }
      throw new Exception("Cannot unmarshal type CustomCommandsType");
    }

    public override void Write(Utf8JsonWriter writer, CustomCommandsType value, JsonSerializerOptions options)
    {
      switch (value)
      {
        case CustomCommandsType.Array:
          JsonSerializer.Serialize(writer, "array", options);
          return;
        case CustomCommandsType.Null:
          JsonSerializer.Serialize(writer, "null", options);
          return;
      }
      throw new Exception("Cannot marshal type CustomCommandsType");
    }

    public static readonly CustomCommandsTypeConverter Singleton = new CustomCommandsTypeConverter();
  }

  public class DateOnlyConverter : JsonConverter<DateOnly>
  {
    private readonly string serializationFormat;
    public DateOnlyConverter() : this(null) { }

    public DateOnlyConverter(string? serializationFormat)
    {
      this.serializationFormat = serializationFormat ?? "yyyy-MM-dd";
    }

    public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
      var value = reader.GetString();
      return DateOnly.Parse(value!);
    }

    public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
  }

  public class TimeOnlyConverter : JsonConverter<TimeOnly>
  {
    private readonly string serializationFormat;

    public TimeOnlyConverter() : this(null) { }

    public TimeOnlyConverter(string? serializationFormat)
    {
      this.serializationFormat = serializationFormat ?? "HH:mm:ss.fff";
    }

    public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
      var value = reader.GetString();
      return TimeOnly.Parse(value!);
    }

    public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
  }

  internal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>
  {
    public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);

    private const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";

    private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;
    private string? _dateTimeFormat;
    private CultureInfo? _culture;

    public DateTimeStyles DateTimeStyles
    {
      get => _dateTimeStyles;
      set => _dateTimeStyles = value;
    }

    public string? DateTimeFormat
    {
      get => _dateTimeFormat ?? string.Empty;
      set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;
    }

    public CultureInfo Culture
    {
      get => _culture ?? CultureInfo.CurrentCulture;
      set => _culture = value;
    }

    public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
    {
      string text;


      if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal
              || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
      {
        value = value.ToUniversalTime();
      }

      text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);

      writer.WriteStringValue(text);
    }

    public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
      string? dateText = reader.GetString();

      if (string.IsNullOrEmpty(dateText) == false)
      {
        if (!string.IsNullOrEmpty(_dateTimeFormat))
        {
          return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);
        }
        else
        {
          return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);
        }
      }
      else
      {
        return default(DateTimeOffset);
      }
    }


    public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();
  }
}
#pragma warning restore CS8618
#pragma warning restore CS8603
